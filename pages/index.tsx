import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import Header from '../components/Header'
import requests from '../utils/requests'
import { Movie } from '../typing'
import Banner from '../components/Banner'
import Row from '../components/Row'
import useAuth from '../hooks/useAuth'
import { useRecoilValue } from 'recoil'
import { Modal } from '../components/Modal'

const inter = Inter({ subsets: ['latin'] })
interface Props{
  netflixOriginals : Movie[],
  trendingNow : Movie[],
  topRated  : Movie[],
  actionMovies  : Movie[],
  comedyMovies : Movie[],
  horrorMovies : Movie[],
  romanceMovies : Movie[],
  documentries : Movie[]
}

const Home =({
  netflixOriginals,
  trendingNow,
  topRated,
  actionMovies,
  comedyMovies,
  horrorMovies,
  romanceMovies,
  
}: Props) => {
  const {loading} = useAuth();
  // const showModal = useRecoilValue()

  // const[showModal, setShowModal] = useState(false)
   return (
   <div className='relative h-screen bg-gradient-to-b
    lg:h-[140vh]' >
      <Head>
        <title>Home - Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header/>
      <main className='relative pl-4 pb-24 lg:space-y-24 lg:pl-16'>
        <Banner netflixOriginals={netflixOriginals}/>
        <section className='md:space-y-24'>
          <Row title='Trending now' Movies={trendingNow}/>
          <Row title ="Top Rated" Movies={topRated}/>
          <Row title ="Action Movies" Movies={actionMovies}/>
          <Row title ="Comedy Movies" Movies={comedyMovies}/>
          <Row title ="Horror Movies" Movies={horrorMovies}/>
          <Row title ="Romance Movies" Movies={romanceMovies}/>
        </section>
      </main>
    </div>
  )
}
export default Home

export const getServerSideProps = async () => {
  const [
    netflixOriginals,
    trendingNow,
    topRated,
    actionMovies,
    comedyMovies,
    horrorMovies,
    romanceMovies,
    documentries,
  ] = await Promise.all([
    fetch(requests.fetchNetflixOriginals).then((res) => res.json()),
    fetch(requests.fetchTrending).then((res) => res.json()),
    fetch(requests.fetchTopRated).then((res) => res.json()),
    fetch(requests.fetchActionMovies).then((res) => res.json()),
    fetch(requests.fetchComedyMovies).then((res) => res.json()),
    fetch(requests.fetchHorrorMovies).then((res) => res.json()),
    fetch(requests.fetchRomanceMovies).then((res) => res.json()),
    fetch(requests.fetchDocumentaries).then((res) => res.json()),
  ]);

  return {
    props: {
      netflixOriginals : netflixOriginals.results,
      trendingNow : trendingNow.results,
      topRated  : topRated.results,
      actionMovies  : actionMovies.results,
      comedyMovies : comedyMovies.results,
      horrorMovies : horrorMovies.results,
      romanceMovies : romanceMovies.results,
      documentries : documentries.results,
    },
  };
}